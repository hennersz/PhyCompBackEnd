[  {    "type": "get",    "url": "/api/all",    "title": "1. Request all pollution data",    "name": "GetAllData",    "group": "pollution",    "version": "0.1.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Mongo ID of the device</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "datetime",            "description": "<p>The time the sensor was updated</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An object containing sensor data</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.dataType",            "description": "<p>An object of some pollution type containing the data and units</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.dataType.value",            "description": "<p>The value for the datatype</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.dataType.units",            "description": "<p>The units for the value</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.dataType.raw_value",            "description": "<p>The raw value for the dataType</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.dataType.raw_units",            "description": "<p>The units for the raw value</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "loc",            "description": "<p>A geoJSON location object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "loc.type",            "description": "<p>The geoJSON type which is always point</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "loc.coordinates",            "description": "<p>The coordinates of the sensor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"_id\":\"56fab1838d45e3a41ac1795d\",\n    \"datetime\":\"2015-07-15T10:52:14Z\",\n    \"data\":{\n      \"no2\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":0.27176,\"raw_units\":\"ppm\"},\n      \"co\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":6.1601333333333335,\"raw_units\":\"ppm\"},\n      \"light\":{\"value\":49.8,\"units\":\"Lux\",\"raw_value\":49.8,\"raw_units\":\"Lux\"},\n      \"noise\":{\"value\":50,\"units\":\"dB\",\"raw_value\":50,\"raw_units\":\"dB\"},\n      \"so2\":null,\n      \"o3\":null,\n      \"pm10\":null,\n      \"pm25\":null\n    },\n   \"loc\":{\n      \"type\":\"Point\",\n      \"coordinates\":[-0.127758299999982,51.5073509]\n    }\n  }\n]",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i citydatavisualiser.herokuapp.com/api/all",        "type": "curl"      }    ],    "filename": "routes/api.js",    "groupTitle": "pollution"  },  {    "type": "get",    "url": "/api/all/near",    "title": "2. Request all pollution data near a point within a certain distance",    "name": "GetAllDataNear",    "group": "pollution",    "version": "0.1.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "-90-90",            "optional": false,            "field": "latitiude",            "description": "<p>The latitude of the point you want to get data near to</p>"          },          {            "group": "Parameter",            "type": "Numberi",            "size": "-180-180",            "optional": false,            "field": "longitude",            "description": "<p>The longitude of the point you want to get data near to</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "0-...",            "optional": false,            "field": "maxDist",            "description": "<p>The maximum distance from the specified point you want data from</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "_id",            "description": "<p>Mongo ID of the device</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "datetime",            "description": "<p>The time the sensor was updated</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>An object containing sensor data</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.dataType",            "description": "<p>An object of some pollution type containing the data and units</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.dataType.value",            "description": "<p>The value for the datatype</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.dataType.units",            "description": "<p>The units for the value</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.dataType.raw_value",            "description": "<p>The raw value for the dataType</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.dataType.raw_units",            "description": "<p>The units for the raw value</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "loc",            "description": "<p>A geoJSON location object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "loc.type",            "description": "<p>The geoJSON type which is always point</p>"          },          {            "group": "Success 200",            "type": "Number[]",            "optional": false,            "field": "loc.coordinates",            "description": "<p>The coordinates of the sensor</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n[\n  {\n    \"_id\":\"56fab1838d45e3a41ac1795d\",\n    \"datetime\":\"2015-07-15T10:52:14Z\",\n    \"data\":{\n      \"no2\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":0.27176,\"raw_units\":\"ppm\"},\n      \"co\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":6.1601333333333335,\"raw_units\":\"ppm\"},\n      \"light\":{\"value\":49.8,\"units\":\"Lux\",\"raw_value\":49.8,\"raw_units\":\"Lux\"},\n      \"noise\":{\"value\":50,\"units\":\"dB\",\"raw_value\":50,\"raw_units\":\"dB\"},\n      \"so2\":null,\n      \"o3\":null,\n      \"pm10\":null,\n      \"pm25\":null\n    },\n   \"loc\":{\n      \"type\":\"Point\",\n      \"coordinates\":[-0.127758299999982,51.5073509]\n    }\n  }\n]",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i citydatavisualiser.herokuapp.com/api/all/near?latitude=51.5073&longitude=-0.1276&maxDist=2000",        "type": "curl"      }    ],    "error": {      "examples": [        {          "title": "Bad request parameters:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"status\": 400,\n  \"message\": \"Bad request - Parameters incorrectly formatted\"\n}",          "type": "json"        }      ]    },    "filename": "routes/api.js",    "groupTitle": "pollution"  },  {    "type": "get",    "url": "/api/small",    "title": "3. Request the nearest data for specific types of pollution",    "name": "GetSpecificDataNear",    "group": "pollution",    "version": "0.1.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "-90-90",            "optional": false,            "field": "latitiude",            "description": "<p>The latitude of the point you want to get data near to</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "-180-180",            "optional": false,            "field": "longitude",            "description": "<p>The longitude of the point you want to get data near to</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "'no2'",              "'co'",              "'light'",              "'noise'",              "'so2'",              "'o3'",              "'pm10'",              "'pm25'"            ],            "optional": true,            "field": "dataTypes",            "defaultValue": "no2,co,light,noise,so2,o3,pm10,pm25",            "description": "<p>A string of comma separated data types you want in the response. If there is only one data type supplied then the response will only contain the children of data type and not the data type label its self.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": true,            "field": "dataType",            "description": "<p>An object of some pollution type containing the data and units</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "dataType.value",            "description": "<p>The value for the datatype</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dataType.units",            "description": "<p>The units for the value</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "dataType.raw_value",            "description": "<p>The raw value for the dataType</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "dataType.raw_units",            "description": "<p>The units for the raw value</p>"          }        ]      },      "examples": [        {          "title": "Success-Response",          "content": "HTTP/1.1 200 OK\n{\n  \"no2\":{\n    \"value\":1,\n    \"units\":\"AirQualityIndex\",\n    \"raw_value\":0.27176,\n    \"raw_units\":\"ppm\"\n  },\n  \"co\":{\n    \"value\":1,\n    \"units\":\"AirQualityIndex\",\n    \"raw_value\":6.1601333333333335,\n    \"raw_units\":\"ppm\"\n  }\n}",          "type": "json"        },        {          "title": "Success-Response for a single data type",          "content": "HTTP/1.1 200 OK\n{\n  \"value\":1,\n  \"units\":\"AirQualityIndex\",\n  \"raw_value\":0.27176,\n  \"raw_units\":\"ppm\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i citydatavisualiser.herokuapp.com/api/small?latitude=51.5073&longitude=-0.1276&dataTypes=no2,c0",        "type": "curl"      }    ],    "error": {      "examples": [        {          "title": "Bad request parameters:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"status\": 400,\n  \"message\": \"Bad request - Parameters incorrectly formatted\"\n}",          "type": "json"        }      ]    },    "filename": "routes/api.js",    "groupTitle": "pollution"  }]
